name: CI/CD Pipeline for Flask on Azure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      ANSIBLE_HOST_KEY_CHECKING: "False"
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install pytest
    
    - name: Test Flask app locally
      run: |
        cd app
        python -c "
        import app
        print('Flask app imported successfully')
        print('Testing home route...')
        with app.app.test_client() as client:
            response = client.get('/')
            print(f'Response: {response.status_code} - {response.get_data(as_text=True)}')
        "
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
    
    - name: Extract Public IP
      id: output
      working-directory: terraform
      run: |
        echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT
    
    - name: Generate Inventory File
      run: |
        echo "[web]" > ansible/inventory.ini
        echo "${{ steps.output.outputs.public_ip }}" >> ansible/inventory.ini
    
    - name: Run Ansible Playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: ansible/docker.yml
        directory: ./ansible
        inventory: inventory.ini
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        user: ${{ secrets.AZURE_USERNAME }}