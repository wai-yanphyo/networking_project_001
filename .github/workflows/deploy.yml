name: Azure Container Deployment

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE: waiyanphyo830/my_flask_app
  AZURE_VM_IP: 52.190.18.218

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v || echo "No tests found, skipping..."
    
    - name: Test Flask app locally
      run: |
        python -c "
        from app import app
        with app.test_client() as client:
            response = client.get('/')
            assert response.status_code == 200
            print('✅ Flask app test passed!')
        "

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    name: Deploy to Azure VM
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible
    
    - name: Create SSH key file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/azure-key
        chmod 600 ~/.ssh/azure-key
    
    - name: Create Ansible inventory
      run: |
        cat > inventory.ini << EOF
        [azure_vm]
        ${{ env.AZURE_VM_IP }} ansible_user=azureuser ansible_ssh_private_key_file=~/.ssh/azure-key ansible_python_interpreter=/usr/bin/python3
        EOF
    
    - name: Deploy with Ansible
      run: |
        export ANSIBLE_HOST_KEY_CHECKING=False
        ansible-playbook -i inventory.ini ansible/docker.yml -v
    
    - name: Verify deployment
      run: |
        sleep 30
        curl -f http://${{ env.AZURE_VM_IP }}:80 || exit 1
        echo "✅ Deployment verified successfully!"
    
    - name: Notification
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "🎉 Deployment completed successfully!"
          echo "🌐 Access your app at: http://${{ env.AZURE_VM_IP }}:80"
        else
          echo "❌ Deployment failed!"
        fi